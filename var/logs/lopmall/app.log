2018-09-29 16:14:47 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStartupProfileInfo:662] |No active profile set, falling back to default profiles: default
2018-09-29 16:14:49 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Initializing ProtocolHandler ["http-nio-8050"]
2018-09-29 16:14:49 [INFO ] [org.apache.catalina.core.StandardService.log:180] |Starting service [Tomcat]
2018-09-29 16:14:49 [INFO ] [org.apache.catalina.core.StandardEngine.log:180] |Starting Servlet Engine: Apache Tomcat/8.5.32
2018-09-29 16:14:49 [INFO ] [org.apache.catalina.core.AprLifecycleListener.log:180] |The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/mazhongmin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
2018-09-29 16:14:49 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring embedded WebApplicationContext
2018-09-29 16:14:50 [INFO ] [org.apache.catalina.core.StandardService.log:180] |Stopping service [Tomcat]
2018-09-29 16:14:50 [ERROR] [org.springframework.boot.SpringApplication.reportFailure:845] |Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'feignController': Injection of resource dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.lane.study.feignconsumer1.service.FeignService1': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback found for feign client SERVCICE-PROVIDER
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:321)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.lane.study.feignconsumer1.FeignConsumer1Application.main(FeignConsumer1Application.java:16)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'com.lane.study.feignconsumer1.service.FeignService1': FactoryBean threw exception on object creation; nested exception is java.lang.IllegalStateException: No fallbackFactory instance of type class com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback found for feign client SERVCICE-PROVIDER
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:178)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:257)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1322)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1098)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:507)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:485)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:619)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:177)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:318)
	... 17 common frames omitted
Caused by: java.lang.IllegalStateException: No fallbackFactory instance of type class com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback found for feign client SERVCICE-PROVIDER
	at org.springframework.cloud.openfeign.HystrixTargeter.getFromContext(HystrixTargeter.java:93)
	at org.springframework.cloud.openfeign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:64)
	at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:53)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:223)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:244)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	... 33 common frames omitted
2018-09-29 16:16:55 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStartupProfileInfo:662] |No active profile set, falling back to default profiles: default
2018-09-29 16:16:57 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Initializing ProtocolHandler ["http-nio-8050"]
2018-09-29 16:16:57 [INFO ] [org.apache.catalina.core.StandardService.log:180] |Starting service [Tomcat]
2018-09-29 16:16:57 [INFO ] [org.apache.catalina.core.StandardEngine.log:180] |Starting Servlet Engine: Apache Tomcat/8.5.32
2018-09-29 16:16:57 [INFO ] [org.apache.catalina.core.AprLifecycleListener.log:180] |The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/mazhongmin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
2018-09-29 16:16:57 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring embedded WebApplicationContext
2018-09-29 16:16:58 [ERROR] [com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback.create:18] |降级服务:
java.lang.RuntimeException: null
	at org.springframework.cloud.openfeign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:67)
	at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:53)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:223)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:244)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:257)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1322)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1098)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:507)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:485)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:619)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:177)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.lane.study.feignconsumer1.FeignConsumer1Application.main(FeignConsumer1Application.java:16)
2018-09-29 16:16:58 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:16:58 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:16:58 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:16:58 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:17:00 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:349] |Initializing Eureka in region us-east-1
2018-09-29 16:17:00 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70] |Using JSON encoding codec LegacyJacksonJson
2018-09-29 16:17:00 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71] |Using JSON decoding codec LegacyJacksonJson
2018-09-29 16:17:00 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80] |Using XML encoding codec XStreamXml
2018-09-29 16:17:00 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81] |Using XML decoding codec XStreamXml
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:958] |Disable delta property : false
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:959] |Single vip registry refresh property : null
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:960] |Force full registry fetch : false
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:961] |Application is null : false
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:962] |Registered Applications size is zero : true
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:964] |Application version is -1: true
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047] |Getting all instance registry info from the eureka server
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056] |The response status is 200
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264] |Starting heartbeat executor: renew interval is: 30
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.InstanceInfoReplicator.<init>:60] |InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:449] |Discovery Client initialized at timestamp 1538209021610 with initial instances count: 5
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.notify:1299] |Saw local status change event StatusChangeEvent [timestamp=1538209021639, current=UP, previous=STARTING]
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:17:01 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Starting ProtocolHandler ["http-nio-8050"]
2018-09-29 16:17:01 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:17:01 [INFO ] [org.apache.tomcat.util.net.NioSelectorPool.log:180] |Using a shared selector for servlet write/read
2018-09-29 16:17:01 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStarted:59] |Started FeignConsumer1Application in 7.976 seconds (JVM running for 10.1)
2018-09-29 16:17:36 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-09-29 16:17:37 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:17:37 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58] |Shutdown hook installed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:17:37 [INFO ] [com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192] |Client: SERVCICE-PROVIDER instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-09-29 16:17:37 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222] |Using serverListUpdater PollingServerListUpdater
2018-09-29 16:17:37 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:17:37 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150] |DynamicServerListLoadBalancer for client SERVCICE-PROVIDER initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[192.168.1.184:8082],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.184:8082;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4a59a882
2018-09-29 16:17:38 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:17:47 [ERROR] [com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback.create:18] |降级服务:
feign.FeignException: status 405 reading FeignService1#test1(String); content:
{"timestamp":"2018-09-29T08:17:47.908+0000","status":405,"error":"Method Not Allowed","message":"Request method 'POST' not supported","path":"/service/provider/test1"}
	at feign.FeignException.errorStatus(FeignException.java:62)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:91)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-09-29 16:19:55 [ERROR] [com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback.create:18] |降级服务:
feign.FeignException: status 405 reading FeignService1#test1(String); content:
{"timestamp":"2018-09-29T08:19:55.418+0000","status":405,"error":"Method Not Allowed","message":"Request method 'POST' not supported","path":"/service/provider/test1"}
	at feign.FeignException.errorStatus(FeignException.java:62)
	at feign.codec.ErrorDecoder$Default.decode(ErrorDecoder.java:91)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:138)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-09-29 16:22:01 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:23:00 [INFO ] [com.netflix.loadbalancer.PollingServerListUpdater.run:53] |Shutting down the Executor Pool for PollingServerListUpdater
2018-09-29 16:23:00 [WARN ] [com.netflix.discovery.DiscoveryClient.notify:1297] |Saw local status change event StatusChangeEvent [timestamp=1538209380255, current=DOWN, previous=UP]
2018-09-29 16:23:00 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:23:00 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:23:00 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:67] |Shutdown hook removed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:23:00 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:72] |Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2018-09-29 16:23:00 [INFO ] [com.netflix.discovery.DiscoveryClient.shutdown:888] |Shutting down DiscoveryClient ...
2018-09-29 16:23:15 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStartupProfileInfo:662] |No active profile set, falling back to default profiles: default
2018-09-29 16:23:17 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Initializing ProtocolHandler ["http-nio-8050"]
2018-09-29 16:23:17 [INFO ] [org.apache.catalina.core.StandardService.log:180] |Starting service [Tomcat]
2018-09-29 16:23:17 [INFO ] [org.apache.catalina.core.StandardEngine.log:180] |Starting Servlet Engine: Apache Tomcat/8.5.32
2018-09-29 16:23:17 [INFO ] [org.apache.catalina.core.AprLifecycleListener.log:180] |The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/mazhongmin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
2018-09-29 16:23:18 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring embedded WebApplicationContext
2018-09-29 16:23:18 [ERROR] [com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback.create:21] |降级服务:
java.lang.RuntimeException: null
	at org.springframework.cloud.openfeign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:67)
	at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:53)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:223)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:244)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:257)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1322)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1098)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:507)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:485)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:619)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:177)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.lane.study.feignconsumer1.FeignConsumer1Application.main(FeignConsumer1Application.java:16)
2018-09-29 16:23:18 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:23:18 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:23:18 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:23:18 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:23:20 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:349] |Initializing Eureka in region us-east-1
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70] |Using JSON encoding codec LegacyJacksonJson
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71] |Using JSON decoding codec LegacyJacksonJson
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80] |Using XML encoding codec XStreamXml
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81] |Using XML decoding codec XStreamXml
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:958] |Disable delta property : false
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:959] |Single vip registry refresh property : null
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:960] |Force full registry fetch : false
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:961] |Application is null : false
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:962] |Registered Applications size is zero : true
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:964] |Application version is -1: true
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047] |Getting all instance registry info from the eureka server
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056] |The response status is 200
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264] |Starting heartbeat executor: renew interval is: 30
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.InstanceInfoReplicator.<init>:60] |InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:449] |Discovery Client initialized at timestamp 1538209401875 with initial instances count: 5
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.notify:1299] |Saw local status change event StatusChangeEvent [timestamp=1538209401911, current=UP, previous=STARTING]
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:23:21 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Starting ProtocolHandler ["http-nio-8050"]
2018-09-29 16:23:21 [INFO ] [org.apache.tomcat.util.net.NioSelectorPool.log:180] |Using a shared selector for servlet write/read
2018-09-29 16:23:21 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:23:22 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStarted:59] |Started FeignConsumer1Application in 7.947 seconds (JVM running for 10.338)
2018-09-29 16:24:03 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-09-29 16:24:04 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:24:04 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58] |Shutdown hook installed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:24:04 [INFO ] [com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192] |Client: SERVCICE-PROVIDER instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-09-29 16:24:04 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222] |Using serverListUpdater PollingServerListUpdater
2018-09-29 16:24:04 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:24:04 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150] |DynamicServerListLoadBalancer for client SERVCICE-PROVIDER initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[192.168.1.184:8082],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.184:8082;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@31d18dfc
2018-09-29 16:24:05 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:24:58 [INFO ] [com.netflix.loadbalancer.PollingServerListUpdater.run:53] |Shutting down the Executor Pool for PollingServerListUpdater
2018-09-29 16:24:58 [WARN ] [com.netflix.discovery.DiscoveryClient.notify:1297] |Saw local status change event StatusChangeEvent [timestamp=1538209498822, current=DOWN, previous=UP]
2018-09-29 16:24:58 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:24:58 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:24:58 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:67] |Shutdown hook removed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:24:58 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:72] |Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2018-09-29 16:24:58 [INFO ] [com.netflix.discovery.DiscoveryClient.shutdown:888] |Shutting down DiscoveryClient ...
2018-09-29 16:25:17 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStartupProfileInfo:662] |No active profile set, falling back to default profiles: default
2018-09-29 16:25:19 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Initializing ProtocolHandler ["http-nio-8050"]
2018-09-29 16:25:19 [INFO ] [org.apache.catalina.core.StandardService.log:180] |Starting service [Tomcat]
2018-09-29 16:25:19 [INFO ] [org.apache.catalina.core.StandardEngine.log:180] |Starting Servlet Engine: Apache Tomcat/8.5.32
2018-09-29 16:25:19 [INFO ] [org.apache.catalina.core.AprLifecycleListener.log:180] |The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/mazhongmin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
2018-09-29 16:25:19 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring embedded WebApplicationContext
2018-09-29 16:25:20 [ERROR] [com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback.create:21] |降级服务:
java.lang.RuntimeException: null
	at org.springframework.cloud.openfeign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:67)
	at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:53)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:223)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:244)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:257)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1322)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1098)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:507)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:485)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:619)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:177)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.lane.study.feignconsumer1.FeignConsumer1Application.main(FeignConsumer1Application.java:16)
2018-09-29 16:25:20 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:25:20 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:25:20 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:25:20 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:25:21 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:349] |Initializing Eureka in region us-east-1
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70] |Using JSON encoding codec LegacyJacksonJson
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71] |Using JSON decoding codec LegacyJacksonJson
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80] |Using XML encoding codec XStreamXml
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81] |Using XML decoding codec XStreamXml
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:958] |Disable delta property : false
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:959] |Single vip registry refresh property : null
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:960] |Force full registry fetch : false
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:961] |Application is null : false
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:962] |Registered Applications size is zero : true
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:964] |Application version is -1: true
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047] |Getting all instance registry info from the eureka server
2018-09-29 16:25:22 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056] |The response status is 200
2018-09-29 16:25:23 [INFO ] [com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264] |Starting heartbeat executor: renew interval is: 30
2018-09-29 16:25:23 [INFO ] [com.netflix.discovery.InstanceInfoReplicator.<init>:60] |InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-09-29 16:25:23 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:449] |Discovery Client initialized at timestamp 1538209523012 with initial instances count: 5
2018-09-29 16:25:23 [INFO ] [com.netflix.discovery.DiscoveryClient.notify:1299] |Saw local status change event StatusChangeEvent [timestamp=1538209523028, current=UP, previous=STARTING]
2018-09-29 16:25:23 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:25:23 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Starting ProtocolHandler ["http-nio-8050"]
2018-09-29 16:25:23 [INFO ] [org.apache.tomcat.util.net.NioSelectorPool.log:180] |Using a shared selector for servlet write/read
2018-09-29 16:25:23 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:25:23 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStarted:59] |Started FeignConsumer1Application in 7.891 seconds (JVM running for 9.477)
2018-09-29 16:25:44 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-09-29 16:25:44 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:25:44 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58] |Shutdown hook installed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:25:44 [INFO ] [com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192] |Client: SERVCICE-PROVIDER instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-09-29 16:25:44 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222] |Using serverListUpdater PollingServerListUpdater
2018-09-29 16:25:44 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150] |DynamicServerListLoadBalancer for client SERVCICE-PROVIDER initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@122e6bf9
2018-09-29 16:25:56 [ERROR] [com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback.create:21] |降级服务:
java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: SERVCICE-PROVIDER
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71)
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97)
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76)
	at feign.hystrix.HystrixInvocationHandler$1.run(HystrixInvocationHandler.java:108)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorSubscribeOn$SubscribeOnSubscriber.call(OperatorSubscribeOn.java:100)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: SERVCICE-PROVIDER
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63)
	... 34 common frames omitted
2018-09-29 16:26:10 [INFO ] [com.netflix.loadbalancer.PollingServerListUpdater.run:53] |Shutting down the Executor Pool for PollingServerListUpdater
2018-09-29 16:26:10 [WARN ] [com.netflix.discovery.DiscoveryClient.notify:1297] |Saw local status change event StatusChangeEvent [timestamp=1538209570228, current=DOWN, previous=UP]
2018-09-29 16:26:10 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:26:10 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:26:10 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:67] |Shutdown hook removed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:26:10 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:72] |Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2018-09-29 16:26:10 [INFO ] [com.netflix.discovery.DiscoveryClient.shutdown:888] |Shutting down DiscoveryClient ...
2018-09-29 16:26:16 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStartupProfileInfo:662] |No active profile set, falling back to default profiles: default
2018-09-29 16:26:18 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Initializing ProtocolHandler ["http-nio-8050"]
2018-09-29 16:26:18 [INFO ] [org.apache.catalina.core.StandardService.log:180] |Starting service [Tomcat]
2018-09-29 16:26:18 [INFO ] [org.apache.catalina.core.StandardEngine.log:180] |Starting Servlet Engine: Apache Tomcat/8.5.32
2018-09-29 16:26:18 [INFO ] [org.apache.catalina.core.AprLifecycleListener.log:180] |The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/mazhongmin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
2018-09-29 16:26:18 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring embedded WebApplicationContext
2018-09-29 16:26:19 [ERROR] [com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback.create:21] |降级服务:
java.lang.RuntimeException: null
	at org.springframework.cloud.openfeign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:67)
	at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:53)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:223)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:244)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:257)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1322)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1098)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:507)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:485)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:619)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:177)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.lane.study.feignconsumer1.FeignConsumer1Application.main(FeignConsumer1Application.java:16)
2018-09-29 16:26:19 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:26:19 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:26:19 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:26:19 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:26:20 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:349] |Initializing Eureka in region us-east-1
2018-09-29 16:26:21 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70] |Using JSON encoding codec LegacyJacksonJson
2018-09-29 16:26:21 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71] |Using JSON decoding codec LegacyJacksonJson
2018-09-29 16:26:21 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80] |Using XML encoding codec XStreamXml
2018-09-29 16:26:21 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81] |Using XML decoding codec XStreamXml
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:958] |Disable delta property : false
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:959] |Single vip registry refresh property : null
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:960] |Force full registry fetch : false
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:961] |Application is null : false
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:962] |Registered Applications size is zero : true
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:964] |Application version is -1: true
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047] |Getting all instance registry info from the eureka server
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056] |The response status is 200
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264] |Starting heartbeat executor: renew interval is: 30
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.InstanceInfoReplicator.<init>:60] |InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:449] |Discovery Client initialized at timestamp 1538209582787 with initial instances count: 5
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.notify:1299] |Saw local status change event StatusChangeEvent [timestamp=1538209582795, current=UP, previous=STARTING]
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:26:22 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Starting ProtocolHandler ["http-nio-8050"]
2018-09-29 16:26:22 [INFO ] [org.apache.tomcat.util.net.NioSelectorPool.log:180] |Using a shared selector for servlet write/read
2018-09-29 16:26:22 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:26:22 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStarted:59] |Started FeignConsumer1Application in 8.089 seconds (JVM running for 9.465)
2018-09-29 16:26:27 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-09-29 16:26:27 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:26:27 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58] |Shutdown hook installed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:26:27 [INFO ] [com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192] |Client: SERVCICE-PROVIDER instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-09-29 16:26:27 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222] |Using serverListUpdater PollingServerListUpdater
2018-09-29 16:26:27 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:26:27 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150] |DynamicServerListLoadBalancer for client SERVCICE-PROVIDER initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[192.168.1.184:8082],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.184:8082;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@fe94113
2018-09-29 16:26:28 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:31:22 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:36:22 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:41:22 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:46:22 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:51:22 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:53:54 [INFO ] [com.netflix.loadbalancer.PollingServerListUpdater.run:53] |Shutting down the Executor Pool for PollingServerListUpdater
2018-09-29 16:53:54 [WARN ] [com.netflix.discovery.DiscoveryClient.notify:1297] |Saw local status change event StatusChangeEvent [timestamp=1538211234075, current=DOWN, previous=UP]
2018-09-29 16:53:54 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:53:54 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:53:54 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:67] |Shutdown hook removed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:53:54 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:72] |Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2018-09-29 16:53:54 [INFO ] [com.netflix.discovery.DiscoveryClient.shutdown:888] |Shutting down DiscoveryClient ...
2018-09-29 16:54:08 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStartupProfileInfo:662] |No active profile set, falling back to default profiles: default
2018-09-29 16:54:10 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Initializing ProtocolHandler ["http-nio-8050"]
2018-09-29 16:54:10 [INFO ] [org.apache.catalina.core.StandardService.log:180] |Starting service [Tomcat]
2018-09-29 16:54:10 [INFO ] [org.apache.catalina.core.StandardEngine.log:180] |Starting Servlet Engine: Apache Tomcat/8.5.32
2018-09-29 16:54:10 [INFO ] [org.apache.catalina.core.AprLifecycleListener.log:180] |The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/mazhongmin/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.]
2018-09-29 16:54:10 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring embedded WebApplicationContext
2018-09-29 16:54:11 [ERROR] [com.lane.study.feignconsumer1.service.fallback.FeignService1Fallback.create:21] |降级服务:
java.lang.RuntimeException: null
	at org.springframework.cloud.openfeign.HystrixTargeter.targetWithFallbackFactory(HystrixTargeter.java:67)
	at org.springframework.cloud.openfeign.HystrixTargeter.target(HystrixTargeter.java:53)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.loadBalance(FeignClientFactoryBean.java:223)
	at org.springframework.cloud.openfeign.FeignClientFactoryBean.getObject(FeignClientFactoryBean.java:244)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:171)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:101)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.getObjectForBeanInstance(AbstractAutowireCapableBeanFactory.java:1175)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:257)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1322)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1288)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1098)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.autowireResource(CommonAnnotationBeanPostProcessor.java:507)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.getResource(CommonAnnotationBeanPostProcessor.java:485)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$ResourceElement.getResourceToInject(CommonAnnotationBeanPostProcessor.java:619)
	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.inject(InjectionMetadata.java:177)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.postProcessPropertyValues(CommonAnnotationBeanPostProcessor.java:318)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:572)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246)
	at com.lane.study.feignconsumer1.FeignConsumer1Application.main(FeignConsumer1Application.java:16)
2018-09-29 16:54:11 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:54:11 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:54:11 [WARN ] [com.netflix.config.sources.URLConfigurationSource.<init>:121] |No URLs will be polled as dynamic configuration sources.
2018-09-29 16:54:11 [INFO ] [com.netflix.config.sources.URLConfigurationSource.<init>:122] |To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-09-29 16:54:13 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:349] |Initializing Eureka in region us-east-1
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:70] |Using JSON encoding codec LegacyJacksonJson
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:71] |Using JSON decoding codec LegacyJacksonJson
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:80] |Using XML encoding codec XStreamXml
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.provider.DiscoveryJerseyProvider.<init>:81] |Using XML decoding codec XStreamXml
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:958] |Disable delta property : false
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:959] |Single vip registry refresh property : null
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:960] |Force full registry fetch : false
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:961] |Application is null : false
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:962] |Registered Applications size is zero : true
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.DiscoveryClient.fetchRegistry:964] |Application version is -1: true
2018-09-29 16:54:14 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1047] |Getting all instance registry info from the eureka server
2018-09-29 16:54:15 [INFO ] [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1056] |The response status is 200
2018-09-29 16:54:15 [INFO ] [com.netflix.discovery.DiscoveryClient.initScheduledTasks:1264] |Starting heartbeat executor: renew interval is: 30
2018-09-29 16:54:15 [INFO ] [com.netflix.discovery.InstanceInfoReplicator.<init>:60] |InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-09-29 16:54:15 [INFO ] [com.netflix.discovery.DiscoveryClient.<init>:449] |Discovery Client initialized at timestamp 1538211255226 with initial instances count: 5
2018-09-29 16:54:15 [INFO ] [com.netflix.discovery.DiscoveryClient.notify:1299] |Saw local status change event StatusChangeEvent [timestamp=1538211255235, current=UP, previous=STARTING]
2018-09-29 16:54:15 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 16:54:15 [INFO ] [org.apache.coyote.http11.Http11NioProtocol.log:180] |Starting ProtocolHandler ["http-nio-8050"]
2018-09-29 16:54:15 [INFO ] [org.apache.tomcat.util.net.NioSelectorPool.log:180] |Using a shared selector for servlet write/read
2018-09-29 16:54:15 [INFO ] [com.netflix.discovery.DiscoveryClient.register:835] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050 - registration status: 204
2018-09-29 16:54:15 [INFO ] [com.lane.study.feignconsumer1.FeignConsumer1Application.logStarted:59] |Started FeignConsumer1Application in 8.486 seconds (JVM running for 10.135)
2018-09-29 16:57:05 [INFO ] [org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:180] |Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-09-29 16:57:06 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:57:06 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.<init>:58] |Shutdown hook installed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 16:57:06 [INFO ] [com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig:192] |Client: SERVCICE-PROVIDER instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-09-29 16:57:06 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.enableAndInitLearnNewServersFeature:222] |Using serverListUpdater PollingServerListUpdater
2018-09-29 16:57:06 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:57:06 [INFO ] [com.netflix.loadbalancer.DynamicServerListLoadBalancer.restOfInit:150] |DynamicServerListLoadBalancer for client SERVCICE-PROVIDER initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=SERVCICE-PROVIDER,current list of Servers=[192.168.1.184:8082],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:192.168.1.184:8082;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@44ddd569
2018-09-29 16:57:07 [INFO ] [com.netflix.config.ChainedDynamicProperty.checkAndFlip:115] |Flipping property: SERVCICE-PROVIDER.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-09-29 16:59:14 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 17:04:14 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 17:09:14 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 17:14:14 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 17:19:14 [INFO ] [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] |Resolving eureka endpoints via configuration
2018-09-29 17:20:06 [WARN ] [com.netflix.discovery.DiscoveryClient.notify:1297] |Saw local status change event StatusChangeEvent [timestamp=1538212806282, current=DOWN, previous=UP]
2018-09-29 17:20:06 [INFO ] [com.netflix.discovery.DiscoveryClient.register:826] |DiscoveryClient_FEIGN-CONSUMER/192.168.1.184:feign-consumer:8050: registering service...
2018-09-29 17:20:06 [INFO ] [com.netflix.loadbalancer.PollingServerListUpdater.run:53] |Shutting down the Executor Pool for PollingServerListUpdater
2018-09-29 17:20:06 [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:91] |Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:89)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 31 common frames omitted
2018-09-29 17:20:06 [WARN ] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute:130] |Request execution failed with message: java.net.ConnectException: Connection refused
2018-09-29 17:20:06 [ERROR] [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:83] |Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call$$$capture(Executors.java:511)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java)
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266)
	at java.util.concurrent.FutureTask.run(FutureTask.java)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 32 common frames omitted
2018-09-29 17:20:06 [WARN ] [com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute:130] |Request execution failed with message: java.net.ConnectException: Connection refused
2018-09-29 17:20:06 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:67] |Shutdown hook removed for: NFLoadBalancer-PingTimer-SERVCICE-PROVIDER
2018-09-29 17:20:06 [INFO ] [com.netflix.util.concurrent.ShutdownEnabledTimer.cancel:72] |Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2018-09-29 17:20:06 [INFO ] [com.netflix.discovery.DiscoveryClient.shutdown:888] |Shutting down DiscoveryClient ...
